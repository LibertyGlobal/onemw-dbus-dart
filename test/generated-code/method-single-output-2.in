<node>
  <interface name="com.example.Test">
    <method name="get_byte_value">
      <arg name="byte_value" type="y" direction="out"/>
    </method>
    <method name="get_boolean_value">
      <arg name="boolean_value" type="b" direction="out"/>
    </method>
    <method name="get_int16_value">
      <arg name="int16_value" type="n" direction="out"/>
    </method>
    <method name="get_uint16_value">
      <arg name="uint16_value" type="q" direction="out"/>
    </method>
    <method name="get_int32_value">
      <arg name="int32_value" type="i" direction="out"/>
    </method>
    <method name="get_uint32_value">
      <arg name="uint32_value" type="u" direction="out"/>
    </method>
    <method name="get_int64_value">
      <arg name="int64_value" type="x" direction="out"/>
    </method>
    <method name="get_uint64_value">
      <arg name="uint64_value" type="t" direction="out"/>
    </method>
    <method name="get_double_value">
      <arg name="double_value" type="d" direction="out"/>
    </method>
    <method name="get_string_value">
      <arg name="string_value" type="s" direction="out"/>
    </method>
    <method name="get_object_path_value">
      <arg name="object_path_value" type="o" direction="out"/>
    </method>
    <method name="get_signature_value">
      <arg name="signature_value" type="g" direction="out"/>
    </method>
    <method name="get_variant_value">
      <arg name="variant_value" type="v" direction="out"/>
    </method>
    <method name="get_struct_value">
      <arg name="struct_value" type="(si)" direction="out"/>
    </method>
    <method name="get_array_value_y">
      <arg name="array_value_y" type="ay" direction="out"/>
    </method>
    <method name="get_array_value_b">
      <arg name="array_value_b" type="ab" direction="out"/>
    </method>
    <method name="get_array_value_n">
      <arg name="array_value_n" type="an" direction="out"/>
    </method>
    <method name="get_array_value_q">
      <arg name="array_value_q" type="aq" direction="out"/>
    </method>
    <method name="get_array_value_u">
      <arg name="array_value_u" type="ai" direction="out"/>
    </method>
    <method name="get_array_value_n">
      <arg name="array_value_n" type="au" direction="out"/>
    </method>
    <method name="get_array_value_x">
      <arg name="array_value_x" type="ax" direction="out"/>
    </method>
    <method name="get_array_value_t">
      <arg name="array_value_t" type="at" direction="out"/>
    </method>
    <method name="get_array_value_d">
      <arg name="array_value_d" type="ad" direction="out"/>
    </method>
    <method name="get_array_value_s">
      <arg name="array_value_s" type="as" direction="out"/>
    </method>
    <method name="get_array_value_o">
      <arg name="array_value_o" type="ao" direction="out"/>
    </method>
    <method name="get_array_value_g">
      <arg name="array_value_g" type="ag" direction="out"/>
    </method>
    <method name="get_array_value_v">
      <arg name="array_value_v" type="av" direction="out"/>
    </method>
    <method name="get_array_value_struct">
      <arg name="array_value_struct" type="a(si)" direction="out"/>
    </method>
    <method name="get_array_value_array">
      <arg name="array_value_array" type="aas" direction="out"/>
    </method>
    <method name="get_dict_value_sv">
      <arg name="dict_value_sv" type="a{sv}" direction="out"/>
    </method>
    <method name="get_dict_value_us">
      <arg name="dict_value_us" type="a{us}" direction="out"/>
    </method>
    <method name="get_dict_value_dict">
      <arg name="dict_value_dict" type="a{sa{sv}}" direction="out"/>
    </method>
  </interface>
</node>
